
================== ASTRAL-Pro ===================== 

This is ASTRAL-Pro (A-Pro) version 1.1.6
Using native AVX batch computing.
Gene trees are treated as unrooted
There are 2 threads used to run.
ti: 3
tx: 3
pw: 4
The number of input tree read is 15
270 trees read from /home/vasenaj/Desktop/phylogenetic-tree-comparison-rt-refactor/data_sets/gene-trees/model.11taxon/estimated_15genes_strongILS/R12/all_gt.tre
15 extra trees.
All output trees will be *arbitrarily* rooted at 5

======== Running the main analysis
Number of taxa: 11 (11 species)
Taxa: [5, 6, 7, 8, 9, 10, 11, 1, 4, 2, 3]
Taxon occupancy: {11=270, 1=270, 2=270, 3=270, 4=270, 5=270, 6=270, 7=270, 8=270, 9=270, 10=270}
Using polytree-based weight calculation.
Number of gene trees: 270
0 trees have missing taxa
Calculating distance matrix (for completion of X) ....with 2 distance matrices in parallel
Species tree distances calculated ...

Building set of clusters (X) from gene trees 
------------------------------
Number of Clusters after addition by distance: 85
Adding to X using resolutions of greedy consensus ...

Computing greedy consensus  took 0 seconds
Limit for sigma of degrees:325

polytomy size limit : > 3
 []
discarded polytomies: 
Threshold 0.0:
Threshold 0.01:
Threshold 0.02:
Threshold 0.05:
Threshold 0.1:
Threshold 0.2:
Threshold 0.3333333333333333:
Number of Clusters after addition by greedy: 85
calculating extra bipartitions from extra input trees ...
Number of Clusters after additions from extra trees: 85
partitions formed in 0.487 secs
Dynamic Programming starting after 0.487 secs
Polytree max score: 4950
Polytree building time: 0.042 seconds.
Number of quartet trees in the gene trees: 4950
Computing hash values took 0 seconds
Size of largest cluster: 11
Total Number of elements: 65
Final optimization score: 0
Size of largest cluster: 11
Total Number of elements: 65
java.lang.NullPointerException
	at phylonet.coalescent.TurnTaskToScores.run(TurnTaskToScores.java:208)
	at java.base/java.lang.Thread.run(Thread.java:829)
Normalized score (portion of input quartet trees satisfied before correcting for multiple individuals): 0.8379797979797979
Final optimization score: 4148
Optimal tree inferred in 1.624 secs.
Weight calculation cumulatively took 0.001204265 secs
(5,(6,(((11,(4,(3,(1,2)))),(9,10)),(7,8))));
Final quartet score is: 4148
Final normalized quartet score is: 0.8379797979797979
You may want to ignore posterior probabilities and other statistics related to the following branch branch because the effective number of genes impacting it is only 15:
	{1, 2, 3}
You may want to ignore posterior probabilities and other statistics related to the following branch branch because the effective number of genes impacting it is only 15:
	{1, 4, 2, 3}
You may want to ignore posterior probabilities and other statistics related to the following branch branch because the effective number of genes impacting it is only 15:
	{11, 1, 4, 2, 3}
You may want to ignore posterior probabilities and other statistics related to the following branch branch because the effective number of genes impacting it is only 15:
	{9, 10}
You may want to ignore posterior probabilities and other statistics related to the following branch branch because the effective number of genes impacting it is only 15:
	{9, 10, 11, 1, 4, 2, 3}
You may want to ignore posterior probabilities and other statistics related to the following branch branch because the effective number of genes impacting it is only 15:
	{7, 8}
You may want to ignore posterior probabilities and other statistics related to the following branch branch because the effective number of genes impacting it is only 15:
	{7, 8, 9, 10, 11, 1, 4, 2, 3}
You may want to ignore posterior probabilities and other statistics related to the following branch branch because the effective number of genes impacting it is only 15:
	{1, 2}
(5,(6,(((11,(4,(3,(1,2)0.69:0.16989903679539747)1:0.8630462173553428)1:2.367123614131617)1:2.367123614131617,(9,10)0.65:0.16989903679539747)0.86:0.3194307707663612,(7,8)0.77:0.22705745063534608)1:0.9988477585144044));
ASTRAL-Pro finished in 2.033 secs
Memory Peak: 1188