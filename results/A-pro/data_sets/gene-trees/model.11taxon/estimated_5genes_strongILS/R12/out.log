
================== ASTRAL-Pro ===================== 

This is ASTRAL-Pro (A-Pro) version 1.1.6
Using native AVX batch computing.
Gene trees are treated as unrooted
There are 2 threads used to run.
ti: 3
tx: 3
pw: 4
The number of input tree read is 5
90 trees read from /home/vasenaj/Desktop/phylogenetic-tree-comparison-rt-refactor/data_sets/gene-trees/model.11taxon/estimated_5genes_strongILS/R12/all_gt.tre
5 extra trees.
All output trees will be *arbitrarily* rooted at 8

======== Running the main analysis
Number of taxa: 11 (11 species)
Taxa: [8, 5, 10, 9, 7, 6, 11, 4, 1, 2, 3]
Taxon occupancy: {11=90, 1=90, 2=90, 3=90, 4=90, 5=90, 6=90, 7=90, 8=90, 9=90, 10=90}
Using polytree-based weight calculation.
Number of gene trees: 90
0 trees have missing taxa
Calculating distance matrix (for completion of X) ....with 2 distance matrices in parallel
Species tree distances calculated ...

Building set of clusters (X) from gene trees 
------------------------------
Number of Clusters after addition by distance: 73
Adding to X using resolutions of greedy consensus ...

Computing greedy consensus  took 0 seconds
Limit for sigma of degrees:325

polytomy size limit : > 4
 [4]
discarded polytomies: 
Threshold 0.0:
Threshold 0.01:
Threshold 0.02:
Threshold 0.05:
Threshold 0.1:
Threshold 0.2:
Threshold 0.3333333333333333:
polytomy of size 4; rounds with additions with at least 5 support: 0; clusters: 73
Number of Clusters after addition by greedy: 73
calculating extra bipartitions from extra input trees ...
Number of Clusters after additions from extra trees: 73
partitions formed in 0.295 secs
Dynamic Programming starting after 0.295 secs
Polytree max score: 1650
Polytree building time: 0.028 seconds.
Number of quartet trees in the gene trees: 1650
Computing hash values took 0 seconds
Size of largest cluster: 11
Total Number of elements: 48
Final optimization score: 0
Size of largest cluster: 11
Total Number of elements: 48
java.lang.NullPointerException
	at phylonet.coalescent.TurnTaskToScores.run(TurnTaskToScores.java:208)
	at java.base/java.lang.Thread.run(Thread.java:829)
Normalized score (portion of input quartet trees satisfied before correcting for multiple individuals): 0.8315151515151515
Final optimization score: 1372
Optimal tree inferred in 1.403 secs.
Weight calculation cumulatively took 4.07908E-4 secs
(8,(7,(5,(9,(6,(10,(11,(4,(1,(2,3))))))))));
Final quartet score is: 1372
Final normalized quartet score is: 0.8315151515151515
You may want to ignore posterior probabilities and other statistics related to the following branch branch because the effective number of genes impacting it is only 5:
	{2, 3}
You may want to ignore posterior probabilities and other statistics related to the following branch branch because the effective number of genes impacting it is only 5:
	{1, 2, 3}
You may want to ignore posterior probabilities and other statistics related to the following branch branch because the effective number of genes impacting it is only 5:
	{4, 1, 2, 3}
You may want to ignore posterior probabilities and other statistics related to the following branch branch because the effective number of genes impacting it is only 5:
	{11, 4, 1, 2, 3}
You may want to ignore posterior probabilities and other statistics related to the following branch branch because the effective number of genes impacting it is only 5:
	{10, 11, 4, 1, 2, 3}
You may want to ignore posterior probabilities and other statistics related to the following branch branch because the effective number of genes impacting it is only 5:
	{10, 6, 11, 4, 1, 2, 3}
You may want to ignore posterior probabilities and other statistics related to the following branch branch because the effective number of genes impacting it is only 5:
	{10, 9, 6, 11, 4, 1, 2, 3}
You may want to ignore posterior probabilities and other statistics related to the following branch branch because the effective number of genes impacting it is only 5:
	{5, 10, 9, 6, 11, 4, 1, 2, 3}
(8,(7,(5,(9,(6,(10,(11,(4,(1,(2,3)0.76:0.33024168687057687)0.56:0.13353139262452274)0.99:1.3862943611198908)0.99:1.3862943611198908)0.89:0.5753641449035618)0.37:0.0)0.7:0.2641515750415869)0.68:0.24686007793152595));
ASTRAL-Pro finished in 1.686 secs
Memory Peak: 1182